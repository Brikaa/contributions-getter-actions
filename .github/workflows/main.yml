name: contributions-getter
on: [workflow_dispatch, pull_request, push]
jobs:
  contributions_getter_job:
    runs-on: ubuntu-latest
    name: contributions-getter
    env:
      TESTS_OUTPUT_PATH: tests/main/outputs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Install npm packages and build code
        run: npm ci && npm run build
        shell: bash
      - name: Run unit tests
        run: npm test
        shell: bash
      - name: Set env vars and temp files
        run: |
          cat "$TESTS_OUTPUT_PATH/.env" >> $GITHUB_ENV
          cp "$TESTS_OUTPUT_PATH/"* "$RUNNER_TEMP/"
        shell: bash
      - name: Write all-modified file
        uses: ./
        with:
          token: ${{ env.TOKEN }}
          username: ${{ env.USERNAME }}
          output-file-path: ${{ env.TESTS_OUTPUT_PATH }}/all-modified-action.md
          header-format: ${{ env.HEADER_FORMAT }}
          highlight-format: ${{ env.HIGHLIGHT_FORMAT }}
          file-before-path: ${{ env.FILE_BEFORE_PATH }}
          file-after-path: ${{ env.FILE_AFTER_PATH }}
          minimum-stars-for-highlight: ${{ env.MINIMUM_STARS_FOR_HIGHLIGHT }}
          months-interval: ${{ env.MONTHS_INTERVAL }}
          sort-repos-fn: ${{ env.SORT_REPOS_FN }}
          repos-to-ignore: ${{ env.REPOS_TO_IGNORE }}
          mock-get-contributions-fn: ${{ env.MOCK_GET_CONTRIBUTIONS_FN }}
      - name: Copy output to temp
        run: cp "$TESTS_OUTPUT_PATH"/* "$RUNNER_TEMP/"
        shell: bash
      - name: Write all-default file
        uses: ./
        with:
          token: ${{ env.TOKEN }}
          username: ${{ env.USERNAME }}
          mock-get-contributions-fn: ${{ env.MOCK_GET_CONTRIBUTIONS_FN }}
          output-file-path: ${{ env.TESTS_OUTPUT_PATH }}/all-default-action.md
      - name: Copy output to temp
        run: cp "$TESTS_OUTPUT_PATH/"* "$RUNNER_TEMP/"
        shell: bash
      - name: Verify files against files generated from unit tests
        run: |
          for i in 'all-modified' 'all-default' ; do
            unit_file="$RUNNER_TEMP/$i-unit.md"
            action_file="$RUNNER_TEMP/$i-action.md"
            echo "================= $unit_file ================="
            cat "$unit_file"
            echo "================= $action_file ================="
            cat "$action_file"
            if cmp "$unit_file" "$action_file" ; then
              echo "Got same output as unit tests"
            else
              echo "Got different output than unit tests"
              exit 1
            fi
          done
        shell: bash
      - id: escape-output-file-path
        name: Test escape output-file-path
        uses: ./
        continue-on-error: true
        with:
          token: ${{ env.TOKEN }}
          username: ${{ env.USERNAME }}
          output-file-path: ../evil/thing
      - name: Fail if previous did not fail
        run: exit 1
        shell: bash
        if: ${{ steps.escape-output-file-path.outcome != 'failure'}}
      - id: escape-file-before-path
        name: Test escape file-before-path
        uses: ./
        continue-on-error: true
        with:
          token: ${{ env.TOKEN }}
          username: ${{ env.USERNAME }}
          file-before-path: ../evil/thing
      - name: Fail if previous did not fail
        run: exit 1
        shell: bash
        if: ${{ steps.escape-file-before-path.outcome != 'failure'}}
      - id: escape-file-after-path
        name: Test escape file-after-path
        uses: ./
        continue-on-error: true
        with:
          token: ${{ env.TOKEN }}
          username: ${{ env.USERNAME }}
          file-after-path: ../evil/thing
      - name: Fail if previous did not fail
        run: exit 1
        shell: bash
        if: ${{ steps.escape-file-after-path.outcome != 'failure'}}
